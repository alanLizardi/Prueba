package cl.accenture.prueba.cl.accenture.prueba.controlador;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import cl.accenture.prueba.cl.accenture.prueba.modelo.Persona;
import cl.accenture.prueba.cl.accenture.prueba.persona.dto.PersonaPorIdDto;
import cl.accenture.prueba.cl.accenture.prueba.persona.dto.PersonasConContadorDto;
import cl.accenture.prueba.cl.accenture.prueba.repositorio.PersonaRepository;

@RestController
@RequestMapping("/persona") // Contexto, path
public class PersonaController {

	@Autowired
	PersonaRepository personaRepository;

	@RequestMapping(value = "/llamar{nombre}", method = RequestMethod.GET, produces = "application/json")
	public Persona traePersona(@RequestParam(value = "nombre", required = true) String nombre) {
		Persona p = new Persona();
		p.setNombre(nombre);
		p.setRut("1-9");
		p.setApellido("Lizardi");
		p.programar();
		p.analizar();
		return p;
	};

	@RequestMapping(value = "/actualizar", method = RequestMethod.POST)
	public void actualizaPersona(@RequestBody Persona p) {
		personaRepository.save(p);
		System.out.println("Actualizado");
	}

	@RequestMapping(value = "/crear", method = RequestMethod.POST)
	public void creaPersona(@RequestBody Persona p) {
		personaRepository.save(p);
		System.out.println("Persona Creada");
	}

	@RequestMapping(value = "/llamarPost", method = RequestMethod.POST, produces = "application/json")
	@ResponseBody
	public  Persona leePersonaPost(@RequestBody PersonaPorIdDto personaPorIdDto) {
		Persona p = new Persona();
		System.out.println("-------------- "+Integer.parseInt(personaPorIdDto.getId()));
		p = personaRepository.traePersonaPorID(personaPorIdDto.getId());
		return p;
	}
	
	@RequestMapping(value = "/llamarGet{id}", method = RequestMethod.GET, produces = "application/json")
	@ResponseBody
	public  Persona leePersonaGet(@RequestParam(value="id") String id) {
		Persona p = new Persona();
		p = personaRepository.traePersonaPorID(id);
		return p;
	}
	
	@RequestMapping(value = "/eliminar", method = RequestMethod.POST)
	public void eliminaPersona(@RequestBody Persona p) {
		personaRepository.delete(p);
		System.out.println("Persona Eliminada");
	}
	
	@RequestMapping(value = "/traePersona", method = RequestMethod.GET, produces = "application/json")
	@ResponseBody
	public  List<Persona> traeTodoPersona() {
		List<Persona> personas = new ArrayList<Persona>();  
		personas = personaRepository.traeTodoPersonas();
		return personas;
	}
	
	@RequestMapping(value = "/traeNumeroPersonas", method = RequestMethod.GET, produces = "application/json")
	@ResponseBody
	public  PersonasConContadorDto personasContador() {
		PersonasConContadorDto personas = new PersonasConContadorDto();  
		int cont = 0;
		List<Persona> p = new ArrayList<>();
		p = personaRepository.traeTodoPersonas();
		
		
		return personas;
	}
	
	
	

}
